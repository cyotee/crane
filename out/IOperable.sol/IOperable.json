{"abi":[{"type":"function","name":"isOperator","inputs":[{"name":"query","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOperatorFor","inputs":[{"name":"func","type":"bytes4","internalType":"bytes4"},{"name":"query","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setOperator","inputs":[{"name":"newOperator","type":"address","internalType":"address"},{"name":"approval","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setOperatorFor","inputs":[{"name":"func","type":"bytes4","internalType":"bytes4"},{"name":"newOperator","type":"address","internalType":"address"},{"name":"approval","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"NewFunctionOperator","inputs":[{"name":"newOperator","type":"address","indexed":false,"internalType":"address"},{"name":"func","type":"bytes4","indexed":false,"internalType":"bytes4"}],"anonymous":false},{"type":"event","name":"NewGlobalOperator","inputs":[{"name":"newOperator","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"NotOperator","inputs":[{"name":"caller","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"isOperator(address)":"6d70f7ae","isOperatorFor(bytes4,address)":"ea562a25","setOperator(address,bool)":"558a7297","setOperatorFor(bytes4,address,bool)":"755dbe7c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotOperator\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"}],\"name\":\"NewFunctionOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"NewGlobalOperator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"query\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"query\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"}],\"name\":\"setOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"func\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"}],\"name\":\"setOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cyotee doge <doge.cyotee>\",\"errors\":{\"NotOperator(address)\":[{\"params\":{\"caller\":\"Caller that failed Operator status validation.\"}}]},\"kind\":\"dev\",\"methods\":{\"isOperator(address)\":{\"custom:func-sig\":\"isOperator(address)\",\"custom:func-sig-hash\":\"6d70f7ae \",\"params\":{\"query\":\"Address for which to query authorization as an operator.\"},\"returns\":{\"_0\":\"Boolean indicating if query is authorized as an operator\"}},\"isOperatorFor(bytes4,address)\":{\"params\":{\"func\":\"Function selector for which to query operator authorization.\",\"query\":\"Account for which to query authorization to call `func`.\"}},\"setOperator(address,bool)\":{\"custom:func-sig\":\"setOperator(address,bool)\",\"custom:func-sig-hash\":\"558a7297\",\"params\":{\"approval\":\"Authorization status to set for newOperator.\",\"newOperator\":\"Address for which to change authorization.\"},\"returns\":{\"_0\":\"Gas saving boolean indicating success.\"}},\"setOperatorFor(bytes4,address,bool)\":{\"params\":{\"approval\":\"Call authorization change.\",\"func\":\"Function selector for which to update authorization of `newOperator`.\",\"newOperator\":\"Account for which to update authorization to call `func`.\"},\"returns\":{\"_0\":\"Gas saving boolean indicating success.\"}}},\"title\":\"IOperable - Simple function caller authorization interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/operable/interfaces/IOperable.sol\":\"IOperable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/access/operable/interfaces/IOperable.sol\":{\"keccak256\":\"0xf214a5c7a368c22ea909ecfe7a2c740321849bfc2d5a3b6c76a10cda0556c506\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5becaae93aed87b54e736810a3e380bb003cf72f0be13791f7de38b65175936e\",\"dweb:/ipfs/QmVWRg7jppVbJVerX32ZcTGKkNBtcJscQSe9VPn3nhu2m3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"type":"error","name":"NotOperator"},{"inputs":[{"internalType":"address","name":"newOperator","type":"address","indexed":false},{"internalType":"bytes4","name":"func","type":"bytes4","indexed":false}],"type":"event","name":"NewFunctionOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"newOperator","type":"address","indexed":false}],"type":"event","name":"NewGlobalOperator","anonymous":false},{"inputs":[{"internalType":"address","name":"query","type":"address"}],"stateMutability":"view","type":"function","name":"isOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes4","name":"func","type":"bytes4"},{"internalType":"address","name":"query","type":"address"}],"stateMutability":"view","type":"function","name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"newOperator","type":"address"},{"internalType":"bool","name":"approval","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setOperator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes4","name":"func","type":"bytes4"},{"internalType":"address","name":"newOperator","type":"address"},{"internalType":"bool","name":"approval","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"isOperator(address)":{"custom:func-sig":"isOperator(address)","custom:func-sig-hash":"6d70f7ae ","params":{"query":"Address for which to query authorization as an operator."},"returns":{"_0":"Boolean indicating if query is authorized as an operator"}},"isOperatorFor(bytes4,address)":{"params":{"func":"Function selector for which to query operator authorization.","query":"Account for which to query authorization to call `func`."}},"setOperator(address,bool)":{"custom:func-sig":"setOperator(address,bool)","custom:func-sig-hash":"558a7297","params":{"approval":"Authorization status to set for newOperator.","newOperator":"Address for which to change authorization."},"returns":{"_0":"Gas saving boolean indicating success."}},"setOperatorFor(bytes4,address,bool)":{"params":{"approval":"Call authorization change.","func":"Function selector for which to update authorization of `newOperator`.","newOperator":"Account for which to update authorization to call `func`."},"returns":{"_0":"Gas saving boolean indicating success."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/access/operable/interfaces/IOperable.sol":"IOperable"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/access/operable/interfaces/IOperable.sol":{"keccak256":"0xf214a5c7a368c22ea909ecfe7a2c740321849bfc2d5a3b6c76a10cda0556c506","urls":["bzz-raw://5becaae93aed87b54e736810a3e380bb003cf72f0be13791f7de38b65175936e","dweb:/ipfs/QmVWRg7jppVbJVerX32ZcTGKkNBtcJscQSe9VPn3nhu2m3"],"license":"AGPL-3.0-or-later"}},"version":1},"id":8}