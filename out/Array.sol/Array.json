{"abi":[{"type":"function","name":"isValidIndex","inputs":[{"name":"length","type":"uint256","internalType":"uint256"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"isValid","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"error","name":"IndexOutOfBounds","inputs":[{"name":"length","type":"uint256","internalType":"uint256"},{"name":"invalidIndex","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x6101e161004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c806365e8faf614610038575b5f5ffd5b610052600480360381019061004d9190610104565b610068565b60405161005f919061015c565b60405180910390f35b5f610073838361007b565b905092915050565b5f818310156100c35782826040517f63a056dd0000000000000000000000000000000000000000000000000000000081526004016100ba929190610184565b60405180910390fd5b6001905092915050565b5f5ffd5b5f819050919050565b6100e3816100d1565b81146100ed575f5ffd5b50565b5f813590506100fe816100da565b92915050565b5f5f6040838503121561011a576101196100cd565b5b5f610127858286016100f0565b9250506020610138858286016100f0565b9150509250929050565b5f8115159050919050565b61015681610142565b82525050565b5f60208201905061016f5f83018461014d565b92915050565b61017e816100d1565b82525050565b5f6040820190506101975f830185610175565b6101a46020830184610175565b939250505056fea2646970667358221220d0805266f68fddb50ac676c5314e08a5198ef40db53844a59b32a98b80b6f34464736f6c634300081c0033","sourceMap":"154:3307:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c806365e8faf614610038575b5f5ffd5b610052600480360381019061004d9190610104565b610068565b60405161005f919061015c565b60405180910390f35b5f610073838361007b565b905092915050565b5f818310156100c35782826040517f63a056dd0000000000000000000000000000000000000000000000000000000081526004016100ba929190610184565b60405180910390fd5b6001905092915050565b5f5ffd5b5f819050919050565b6100e3816100d1565b81146100ed575f5ffd5b50565b5f813590506100fe816100da565b92915050565b5f5f6040838503121561011a576101196100cd565b5b5f610127858286016100f0565b9250506020610138858286016100f0565b9150509250929050565b5f8115159050919050565b61015681610142565b82525050565b5f60208201905061016f5f83018461014d565b92915050565b61017e816100d1565b82525050565b5f6040820190506101975f830185610175565b6101a46020830184610175565b939250505056fea2646970667358221220d0805266f68fddb50ac676c5314e08a5198ef40db53844a59b32a98b80b6f34464736f6c634300081c0033","sourceMap":"154:3307:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;863:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;960:12;991:28;1005:6;1013:5;991:13;:28::i;:::-;984:35;;863:163;;;;:::o;1391:237::-;1489:12;1525:5;1516:6;:14;1513:88;;;1576:6;1584:5;1553:37;;;;;;;;;;;;:::i;:::-;;;;;;;;1513:88;1617:4;1610:11;;1391:237;;;;:::o;88:117:66:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:90::-;1204:7;1247:5;1240:13;1233:21;1222:32;;1170:90;;;:::o;1266:117::-;1355:21;1370:5;1355:21;:::i;:::-;1350:3;1343:34;1266:117;;:::o;1389:226::-;1484:4;1522:2;1511:9;1507:18;1499:26;;1535:73;1605:1;1594:9;1590:17;1581:6;1535:73;:::i;:::-;1389:226;;;;:::o;1621:118::-;1708:24;1726:5;1708:24;:::i;:::-;1703:3;1696:37;1621:118;;:::o;1745:332::-;1866:4;1904:2;1893:9;1889:18;1881:26;;1917:71;1985:1;1974:9;1970:17;1961:6;1917:71;:::i;:::-;1998:72;2066:2;2055:9;2051:18;2042:6;1998:72;:::i;:::-;1745:332;;;;;:::o","linkReferences":{}},"methodIdentifiers":{"isValidIndex(uint256,uint256)":"65e8faf6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"invalidIndex\",\"type\":\"uint256\"}],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isValidIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"cyotee doge <doge.cyotee>\",\"errors\":{\"IndexOutOfBounds(uint256,uint256)\":[{\"params\":{\"invalidIndex\":\"The index that is out of bounds for the array.\",\"length\":\"The length of the array for which `invalidIndex` is out of bounds.\"}}]},\"kind\":\"dev\",\"methods\":{\"isValidIndex(uint256,uint256)\":{\"custom:selector\":\"0x65e8faf6\",\"custom:sig\":\"isValidIndex(uint256,uint256)\",\"details\":\"Reverts with custom error if provided index would be out of bounds of provided length.Facilitates usage of custom error within a require statement.\",\"params\":{\"index\":\"The index to confirm is contained within the provided length.\",\"length\":\"The length of the array against which the index is being checked..\"}}},\"title\":\"Array Standard operations for all arrays.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/collections/Array.sol\":\"Array\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/utils/collections/Array.sol\":{\"keccak256\":\"0x97b07287024309d9f44d92b1f3fd2febf0415d40e0aff7495a01449db02f689c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6464354271bd3837d3b141387b62d71bc897a0d4f10a0ac07498c5c87fb06e1\",\"dweb:/ipfs/QmcFXFfsmA1zh5QPWqHX1DMsHk67VqKQEUbC6fJai7hQSZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"invalidIndex","type":"uint256"}],"type":"error","name":"IndexOutOfBounds"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"pure","type":"function","name":"isValidIndex","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"isValidIndex(uint256,uint256)":{"custom:selector":"0x65e8faf6","custom:sig":"isValidIndex(uint256,uint256)","details":"Reverts with custom error if provided index would be out of bounds of provided length.Facilitates usage of custom error within a require statement.","params":{"index":"The index to confirm is contained within the provided length.","length":"The length of the array against which the index is being checked.."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/utils/collections/Array.sol":"Array"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/utils/collections/Array.sol":{"keccak256":"0x97b07287024309d9f44d92b1f3fd2febf0415d40e0aff7495a01449db02f689c","urls":["bzz-raw://c6464354271bd3837d3b141387b62d71bc897a0d4f10a0ac07498c5c87fb06e1","dweb:/ipfs/QmcFXFfsmA1zh5QPWqHX1DMsHk67VqKQEUbC6fJai7hQSZ"],"license":"MIT"}},"version":1},"id":50}